
#include <stdio.h>
#define NUMBER 100002

int f[NUMBER], x, y;

int main()
{
	int a = 0, b = 0, side = 0, point = 0;
	int sum[NUMBER];
	int case=0;
	bool flag;
	void combine(int a, int b);
	int find(int t);
	while (1)
	{
		flag = true;
		side = 0;
		point = 0;
		for (int i = 1; i <= NUMBER; i++)
		{
			f[i] = i;
			sum[i] = 0;
		}
		while (scanf("%d %d", &x, &y), !(x == 0 && y == 0))
		{
			case++;
			if (x == -1, y == -1)
				return 0;
			if (find(x) != find(y))
				combine(x, y);
			else
				flag = false;
			side++;
			sum[x]++;
			sum[y]++;
		}
		for (int i = 1; i <= NUMBER; i++)
		{
			if (sum[i] != 0)
				point++;
		}
		if ((point - 1) == side)
		{
		}
		else
			flag = false;

		if(point==0)
			printf("Case %d is a tree.",case);
		else
		{
			if (flag == true)
				printf("Case %d is a tree.",case);
			else
				printf("Case %d is not a tree.",case);
		}

	}
	return 0;
}

void combine(int a, int b)
{
	int find(int t);
	f[find(a)] = find(b);
	return;
}

//找老大
int find(int t)
{
	if (f[t] == t)
		return t;
	else
		return f[t] = find(f[t]);
}
